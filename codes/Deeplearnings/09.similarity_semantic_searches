{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 의미 검색 유사도","metadata":{}},{"cell_type":"markdown","source":"### 데이터셋 준비","metadata":{}},{"cell_type":"code","source":"from datasets import load_dataset\n\n\n# https://huggingface.co/datasets/klue/klue/viewer/mrc\nklue_mrc_dataset = load_dataset('klue', 'mrc', split='train')\nklue_mrc_dataset","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:40:09.293731Z","iopub.execute_input":"2025-02-07T00:40:09.294105Z","iopub.status.idle":"2025-02-07T00:40:14.909673Z","shell.execute_reply.started":"2025-02-07T00:40:09.294066Z","shell.execute_reply":"2025-02-07T00:40:14.908821Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/22.5k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b8abcb5a1bb44bf5b05f0a2e5f213824"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/21.4M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c2b99444e9814173989831da586beab3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"validation-00000-of-00001.parquet:   0%|          | 0.00/8.68M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"09925d3239ac4a31946085f4d7d37254"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/17554 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"170a41abbd3043928ff34326b6e4b10f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/5841 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"61ab7482bd75442f86df66cb9e826fe0"}},"metadata":{}},{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['title', 'context', 'news_category', 'source', 'guid', 'is_impossible', 'question_type', 'question', 'answers'],\n    num_rows: 17554\n})"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# 일부 데이터만 사용 row 1000 정도\nrow_size = 1000\n# klue_mrc_dataset[:1000]\n\nklue_mrc_dataset_train = klue_mrc_dataset.train_test_split(train_size=row_size\n                                 , shuffle=False)['train']\nklue_mrc_dataset_train\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:40:14.910537Z","iopub.execute_input":"2025-02-07T00:40:14.911098Z","iopub.status.idle":"2025-02-07T00:40:14.929862Z","shell.execute_reply.started":"2025-02-07T00:40:14.911056Z","shell.execute_reply":"2025-02-07T00:40:14.928986Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['title', 'context', 'news_category', 'source', 'guid', 'is_impossible', 'question_type', 'question', 'answers'],\n    num_rows: 1000\n})"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"klue_mrc_dataset_train[10]\nklue_mrc_dataset_train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:40:14.931126Z","iopub.execute_input":"2025-02-07T00:40:14.931508Z","iopub.status.idle":"2025-02-07T00:40:14.937947Z","shell.execute_reply.started":"2025-02-07T00:40:14.931471Z","shell.execute_reply":"2025-02-07T00:40:14.937071Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"(1000, 9)"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## 데이터 임베딩","metadata":{}},{"cell_type":"code","source":"from sentence_transformers import SentenceTransformer\nsentence_model = SentenceTransformer('snunlp/KR-SBERT-V40K-klueNLI-augSTS')\nsentence_model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:40:14.939905Z","iopub.execute_input":"2025-02-07T00:40:14.940169Z","iopub.status.idle":"2025-02-07T00:40:54.083821Z","shell.execute_reply.started":"2025-02-07T00:40:14.940146Z","shell.execute_reply":"2025-02-07T00:40:54.082364Z"}},"outputs":[{"name":"stderr","text":"The cache for model files in Transformers v4.22.0 has been updated. Migrating your old cache. This is a one-time only operation. You can interrupt this and resume the migration later on by calling `transformers.utils.move_cache()`.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"0it [00:00, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6b0223fe5fac439c81d0d38a4836af15"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/229 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"13ce4c2a17094033a5fd6b558679013b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config_sentence_transformers.json:   0%|          | 0.00/124 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"30df1be2aa5b4d6b911a1243003a222f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/4.02k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"149268c8f6b54b49ae33069bdf0e081c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c2d7ffbd1d784ee295b13ec2a8939e82"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/707 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cd9dfad47df049d8acab1b6c51e16c60"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/467M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2c275b26cabd4a6c82ca4b65c229d186"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/394 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fd6f21200e4f4424b08cc226117492be"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/336k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c20a65ecef514723be1c8826a0e3d74a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/967k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b3baa8e11d4c4968841be7553dfd7bb2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b993e0af7f7549209d25b772000a7450"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"1_Pooling/config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"179738b2d5b5405dbbaca940b79d0228"}},"metadata":{}},{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"SentenceTransformer(\n  (0): Transformer({'max_seq_length': 128, 'do_lower_case': False}) with Transformer model: BertModel \n  (1): Pooling({'word_embedding_dimension': 768, 'pooling_mode_cls_token': False, 'pooling_mode_mean_tokens': True, 'pooling_mode_max_tokens': False, 'pooling_mode_mean_sqrt_len_tokens': False, 'pooling_mode_weightedmean_tokens': False, 'pooling_mode_lasttoken': False, 'include_prompt': True})\n)"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"context_embedded = sentence_model.encode(klue_mrc_dataset_train['context'])\ncontext_embedded.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:40:54.086590Z","iopub.execute_input":"2025-02-07T00:40:54.088872Z","iopub.status.idle":"2025-02-07T00:44:21.539247Z","shell.execute_reply.started":"2025-02-07T00:40:54.088820Z","shell.execute_reply":"2025-02-07T00:44:21.538177Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/32 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"84c11d199f984bde9e38ed25888fb5aa"}},"metadata":{}},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"(1000, 768)"},"metadata":{}}],"execution_count":5},{"cell_type":"markdown","source":"### 검색 인덱스 생성(KNN 알고리즘 사용)","metadata":{}},{"cell_type":"code","source":"!pip install faiss-cpu faiss-gpu","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:21.540525Z","iopub.execute_input":"2025-02-07T00:44:21.540936Z","iopub.status.idle":"2025-02-07T00:44:31.574013Z","shell.execute_reply.started":"2025-02-07T00:44:21.540873Z","shell.execute_reply":"2025-02-07T00:44:31.572931Z"}},"outputs":[{"name":"stdout","text":"Collecting faiss-cpu\n  Downloading faiss_cpu-1.10.0-cp310-cp310-manylinux_2_28_x86_64.whl.metadata (4.4 kB)\nCollecting faiss-gpu\n  Downloading faiss_gpu-1.7.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.4 kB)\nRequirement already satisfied: numpy<3.0,>=1.25.0 in /usr/local/lib/python3.10/dist-packages (from faiss-cpu) (1.26.4)\nRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from faiss-cpu) (24.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<3.0,>=1.25.0->faiss-cpu) (2.4.1)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<3.0,>=1.25.0->faiss-cpu) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<3.0,>=1.25.0->faiss-cpu) (2024.2.0)\nDownloading faiss_cpu-1.10.0-cp310-cp310-manylinux_2_28_x86_64.whl (30.7 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.7/30.7 MB\u001b[0m \u001b[31m55.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading faiss_gpu-1.7.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (85.5 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m85.5/85.5 MB\u001b[0m \u001b[31m18.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m0:01\u001b[0mm\n\u001b[?25hInstalling collected packages: faiss-gpu, faiss-cpu\nSuccessfully installed faiss-cpu-1.10.0 faiss-gpu-1.7.2\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"import faiss # 메타 api로 벡터 거리 계산\n\nindex_knn = faiss.IndexFlatL2(context_embedded.shape[1]) # KNN 알고리즘 초기, 768에 벡터공간 할당\nindex_knn","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:31.575183Z","iopub.execute_input":"2025-02-07T00:44:31.575445Z","iopub.status.idle":"2025-02-07T00:44:31.624293Z","shell.execute_reply.started":"2025-02-07T00:44:31.575419Z","shell.execute_reply":"2025-02-07T00:44:31.623390Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"<faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7af657d1a7f0> >"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"# 인덱스에 임베딩 저장 : 테이블 생성 유사(메모리용 벡터 데이터 베이스와 유사)\n\nindex_knn.add(context_embedded)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:31.625220Z","iopub.execute_input":"2025-02-07T00:44:31.625475Z","iopub.status.idle":"2025-02-07T00:44:31.631524Z","shell.execute_reply.started":"2025-02-07T00:44:31.625455Z","shell.execute_reply":"2025-02-07T00:44:31.630647Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"type(index_knn), index_knn","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:31.632548Z","iopub.execute_input":"2025-02-07T00:44:31.632812Z","iopub.status.idle":"2025-02-07T00:44:31.648018Z","shell.execute_reply.started":"2025-02-07T00:44:31.632791Z","shell.execute_reply":"2025-02-07T00:44:31.647122Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"(faiss.swigfaiss_avx2.IndexFlatL2,\n <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7af657d1a7f0> >)"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"## 활용\n\nquery = '이번 연도에는 언제 비가 많이 올까?'\n\nquery_embedded = sentence_model.encode([query])\n\nquery_embedded.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:31.648855Z","iopub.execute_input":"2025-02-07T00:44:31.649163Z","iopub.status.idle":"2025-02-07T00:44:31.747169Z","shell.execute_reply.started":"2025-02-07T00:44:31.649139Z","shell.execute_reply":"2025-02-07T00:44:31.746106Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c7e73eeae3f742c78437735b09857e06"}},"metadata":{}},{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"(1, 768)"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"# index_knn.search(query_embedded, 3)\n\ndistance, indices = index_knn.search(query_embedded, 3)\n\nfor idx in indices[0]:\n    print(klue_mrc_dataset_train['context'][idx][:30])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:44:31.748375Z","iopub.execute_input":"2025-02-07T00:44:31.748742Z","iopub.status.idle":"2025-02-07T00:44:31.786437Z","shell.execute_reply.started":"2025-02-07T00:44:31.748706Z","shell.execute_reply":"2025-02-07T00:44:31.785460Z"}},"outputs":[{"name":"stdout","text":"올여름 장마가 17일 제주도에서 시작됐다. 서울 등 중\n연구 결과에 따르면, 오리너구리의 눈은 대부분의 포유류\n연구 결과에 따르면, 오리너구리의 눈은 대부분의 포유류\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"distance, indices","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T00:55:18.823735Z","iopub.execute_input":"2025-02-07T00:55:18.824130Z","iopub.status.idle":"2025-02-07T00:55:18.832145Z","shell.execute_reply.started":"2025-02-07T00:55:18.824100Z","shell.execute_reply":"2025-02-07T00:55:18.831161Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"(array([[300.91895, 420.8628 , 420.8628 ]], dtype=float32),\n array([[  0, 920, 921]]))"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"## 라마 api 벡터 활용","metadata":{}},{"cell_type":"code","source":"!pip install llama_index llama-index-embeddings-huggingface -qqq","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:18:34.663034Z","iopub.execute_input":"2025-02-07T01:18:34.663397Z","iopub.status.idle":"2025-02-07T01:18:39.177578Z","shell.execute_reply.started":"2025-02-07T01:18:34.663365Z","shell.execute_reply":"2025-02-07T01:18:39.176167Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"from llama_index.core import VectorStoreIndex, Document\nfrom llama_index.embeddings.huggingface import HuggingFaceEmbedding","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:19:00.461671Z","iopub.execute_input":"2025-02-07T01:19:00.462043Z","iopub.status.idle":"2025-02-07T01:19:00.488330Z","shell.execute_reply.started":"2025-02-07T01:19:00.462010Z","shell.execute_reply":"2025-02-07T01:19:00.487408Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"# llama 맞는 dataset 형식 구성\ntext_list = klue_mrc_dataset_train[:100]['context']\n# len(text_list), text_list[3]\n\ndocuments = [Document(text=text) for text in text_list] # llama_index에 넣는 형식 맞추기 위해 변형\ntype(documents), documents[3]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:28:31.825166Z","iopub.execute_input":"2025-02-07T01:28:31.825594Z","iopub.status.idle":"2025-02-07T01:28:31.839702Z","shell.execute_reply.started":"2025-02-07T01:28:31.825569Z","shell.execute_reply":"2025-02-07T01:28:31.838718Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"(list,\n Document(id_='4f9e446b-fcdc-44bb-a0ee-9fa815e5a413', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={}, metadata_template='{key}: {value}', metadata_separator='\\n', text_resource=MediaResource(embeddings=None, data=None, text='미국 세인트루이스에서 태어났고, 프린스턴 대학교에서 학사 학위를 마치고 1939년에 로체스터 대학교에서 핵물리학으로 박사 학위를 마쳤다. 제2차 세계대전중에 그는 매사추세츠 공과대학교 방사선 연구소에서 일하였다. 그곳에서 그는 레이다를 개발하였고, 딕 복사계와 마이크로파 수신기를 설계하였다. 그는 방사선 연구소의 지붕에서 이를 20K보다 낮은 우주 마이크로파 배경의 한계 온도를 설정하는 데 사용하였다.\\n\\n전후 1946년 그는 프린스턴 대학교로 돌아왔고, 이곳에서 자신의 경력의 나머지를 보내게 되었다. 그는 원자 물리학에서 레이저와 전자의 회전 자기 비율을 측정하는 것을 연구하였다. 그의 분광학과 발관 전송 분야의 중대한 기여는 딕 좁아짐(Dicke narrowing, 원자의 자유평균행로가 원자의 방사 전이의 한 파장의 길이보다 짧아지고, 광자의 흡수나 분출하는 동안에 원자의 속도와 방향은 많이 변하는 현상)이라 불리는 현상에 대한 예견이었다. 딕 좁아짐은 단파와 마이크로파 영역에서 상대적으로 낮은 압력에서 발생한다. 딕 좁아짐은 감마선에서 뫼스바우어 효과에 비견된다.\\n\\n그는 등가 원리를 이용한 일반 상대성 이론의 정확한 측정 프로그램의 개발에 그의 남은 경력을 보냈다. 칼 브랜스(Carl H. Brans)와 함께 그는 중력의 브랜스-딕 이론, 폴 디랙의 큰 수 가설과 마흐의 원리에 의해 영감을 얻은 일반 상대성 이론의 등가 원리의 깨짐을 발전시켰다. 하이라이트는 Roll과 Krotkov와 Dicke에 의한 등가 원리의 고전적인 측정이었고, 이 실험에서 이전의 작업들 보다 100배나 더 정확한 측정치를 얻었다. 디키는 또한 일반 상대성 이론의 고전적 시험 가운데 하나인, 수성의 근일점을 이해하는 데 유용한 태양 편평도를 측정하였다. 폴 디랙은 중력 상수가 우주의 거꾸로 나이와 부정확하게 일치하며, 중력 상수는 지금의 평형을 유지하기 위해 바뀌어야만 한다고 추측했다. 딕은 디랙의 관계가 선택 효과일 수 있다는 것을 깨달았다. 평형이 깨어졌을 다른 어떠한 시대에는 그 모순을 알아차릴 수 있는 지적인 생명채가 없을 것이다. 이것은 소위 약한 인간 중심 원리의 첫 번째 현대적 적용이다.', path=None, url=None, mimetype=None), image_resource=None, audio_resource=None, video_resource=None, text_template='{metadata_str}\\n\\n{content}'))"},"metadata":{}}],"execution_count":27},{"cell_type":"code","source":"# llama index 벡터화\nfrom llama_index.embeddings.huggingface import HuggingFaceEmbedding\n\nembedding_model = HuggingFaceEmbedding(model_name='snunlp/KR-SBERT-V40K-klueNLI-augSTS')\nembedding_model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:33:26.517669Z","iopub.execute_input":"2025-02-07T01:33:26.518073Z","iopub.status.idle":"2025-02-07T01:33:32.963704Z","shell.execute_reply.started":"2025-02-07T01:33:26.518041Z","shell.execute_reply":"2025-02-07T01:33:32.962331Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/229 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"181319aabe1d488bb3674c168df58fd4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config_sentence_transformers.json:   0%|          | 0.00/124 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ffbc75d93e0840fda4753d17a2c54f4b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/4.02k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fa86807f528c4856afa61d1de78cc0f5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a99b99f3fedc48deaf007584c9db33fa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/707 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c0e68b12d5b147918e047a1b13f257dc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/467M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d43ffdf5f7964d07bc9d1b57556ac8de"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/394 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1f1bf1af29c740efafa95a64bc6cd7ac"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/336k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"87e487f4498641abb512a798e2551fce"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/967k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1d357358b6df4f5a85520334f726ca8c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6a2fcca4846547dbb3ce9e4fc4c20e1d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"1_Pooling/config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c96c9271478f4ad2814b1e86d7303223"}},"metadata":{}},{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"HuggingFaceEmbedding(model_name='snunlp/KR-SBERT-V40K-klueNLI-augSTS', embed_batch_size=10, callback_manager=<llama_index.core.callbacks.base.CallbackManager object at 0x7af61944a170>, num_workers=None, max_length=128, normalize=True, query_instruction=None, text_instruction=None, cache_folder=None)"},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"## index화 \nindex_llama = VectorStoreIndex.from_documents(documents, embed_model=embedding_model)\n\nindex_llama","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:36:24.550359Z","iopub.execute_input":"2025-02-07T01:36:24.550735Z","iopub.status.idle":"2025-02-07T01:36:53.350339Z","shell.execute_reply.started":"2025-02-07T01:36:24.550702Z","shell.execute_reply":"2025-02-07T01:36:53.349235Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fe5111fe4a7b419fb50c9d087ad2eb3f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f9e7c612feed4ab79e6e0e2a2abe1e03"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d4243362b9354d8d9c8e7867c5720bc2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"32a36ab7e0a34dcc82fcf5e00619f785"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4a1f562653084595846e0ff8612e982f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8f1411008a6c4bbcae8280833ff94fa7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f77391a050504afb81d24a5e53be46f8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"40bef735c8d44129aeff01ac6777ecc8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6107bc3135aa4102901d222d5b55beca"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f1e22724b6284049a2d4d7d4dec4ddca"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b76619b9991c4d7fa5337f5026af6e11"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ce1f9a65c0db4034863b3725bd878f91"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7fb703538923437fb79aa176ab02fdd7"}},"metadata":{}},{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"<llama_index.core.indices.vector_store.base.VectorStoreIndex at 0x7af618d30af0>"},"metadata":{}}],"execution_count":34},{"cell_type":"code","source":"import groq\n\nclient = groq.Groq(\n    api_key=\"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\"\n)\n\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful assistant.\"\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"Hello!\"\n        }\n    ],\n    model=\"mixtral-8x7b-32768\",\n)\n\nprint(chat_completion.choices[0].message.content)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:45:05.803336Z","iopub.execute_input":"2025-02-07T01:45:05.803733Z","iopub.status.idle":"2025-02-07T01:45:06.667395Z","shell.execute_reply.started":"2025-02-07T01:45:05.803697Z","shell.execute_reply":"2025-02-07T01:45:06.666411Z"}},"outputs":[{"name":"stdout","text":"Hello! I'm here to help answer any questions you have to the best of my ability. What can I assist you with today?\n","output_type":"stream"}],"execution_count":52},{"cell_type":"code","source":"import groq\nfrom typing import Optional, List, Mapping, Any\n\nclass GroqWrapper:\n    def __init__(self, api_key: str, model_name: str = \"mixtral-8x7b-32768\", temperature: float = 0.7):\n        self.client = groq.Groq(api_key=api_key)\n        self.model_name = model_name\n        self.temperature = temperature\n\n    def chat(self, messages: List[dict]) -> str:\n        response = self.client.chat.completions.create(\n            messages=messages,\n            model=self.model_name,\n            temperature=self.temperature,\n        )\n        return response.choices[0].message.content\n\n    def complete(self, prompt: str) -> str:\n        messages = [{\"role\": \"user\", \"content\": prompt}]\n        return self.chat(messages)\n\n# Groq 래퍼 인스턴스 생성\ngroq_wrapper = GroqWrapper(\n    api_key=\"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\",\n    model_name=\"mixtral-8x7b-32768\",\n    temperature=0.7\n)\n\n# 간단한 사용 예시\nmessages = [\n    {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n    {\"role\": \"user\", \"content\": \"Hello!\"}\n]\n\nresponse = groq_wrapper.chat(messages)\nprint(response)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:52:36.268230Z","iopub.execute_input":"2025-02-07T01:52:36.268608Z","iopub.status.idle":"2025-02-07T01:52:37.132577Z","shell.execute_reply.started":"2025-02-07T01:52:36.268576Z","shell.execute_reply":"2025-02-07T01:52:37.131597Z"}},"outputs":[{"name":"stdout","text":"Hello! I'm here to help you. Is there something you'd like to know or a task you need assistance with?\n","output_type":"stream"}],"execution_count":67},{"cell_type":"code","source":"from llama_index.core import Settings\n\n# 전역 설정 변경\nSettings.llm = groq_llm\n\n# Query Engine 생성\nquery_engine = index_llama.as_query_engine()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:52:37.133888Z","iopub.execute_input":"2025-02-07T01:52:37.134270Z","iopub.status.idle":"2025-02-07T01:52:37.139413Z","shell.execute_reply.started":"2025-02-07T01:52:37.134230Z","shell.execute_reply":"2025-02-07T01:52:37.138302Z"}},"outputs":[],"execution_count":68},{"cell_type":"code","source":"query = '이번 년도에는 결혼을 할 수 있을까?'\nresponse = query_engine.query(query)\nresponse","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-07T01:52:37.140762Z","iopub.execute_input":"2025-02-07T01:52:37.141040Z","iopub.status.idle":"2025-02-07T01:52:38.022265Z","shell.execute_reply.started":"2025-02-07T01:52:37.141016Z","shell.execute_reply":"2025-02-07T01:52:38.020908Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"24fc9edbf2ee468bbe83f1933a6e7670"}},"metadata":{}},{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"Response(response='I am not able to provide an answer to that question as there is no information provided in the context about any upcoming wedding or plans related to marriage in the current year.', source_nodes=[NodeWithScore(node=TextNode(id_='7be7dcb4-5e0e-4d91-9c65-c42c59fb0327', embedding=None, metadata={}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='e91f477c-f467-4074-9d44-aff12ce66437', node_type='4', metadata={}, hash='0f07ecd2dc44b07247d9fb41b5f478125e42df75548538ad07dfecdc30f24537')}, metadata_template='{key}: {value}', metadata_separator='\\n', text='LG생활건강의 한방 화장품 브랜드 ‘후’는 지난달 말 모델 이영애 씨와 11년 연속으로 계약을 갱신했다. 후가 연매출 약 4300억원(지난해 기준)의 대형 브랜드로 성장하기까지 중화권 한류스타인 이씨의 공로가 컸다는 이유에서다. 후의 대표 제품인 ‘비첩자생 에센스’가 ‘이영애 에센스’라는 별칭으로 불릴 정도로 양측은 끈끈한 관계를 이어오고 있다.빠르게 변하는 유행만큼 모델도 자주 바뀌는 화장품업계에서 10년 이상 장수하는 ‘대기록’을 쓴 연예인이 속속 등장하고 있다.이씨 못지않은 장수모델로 10년째 SK-Ⅱ 모델로 활동 중인 김희애 씨가 대표적이다. “놓치지 않을 거예요”라는 김씨의 광고문구는 SK-Ⅱ의 상징이 됐다. 회사 측은 “SK-Ⅱ와 김씨는 이제 브랜드와 모델의 관계를 넘어 ‘가족’이라고 표현해야 할 정도”라고 했다. 국내 화장품 광고 역사상 최장수 광고모델은 채시라 씨로 알려졌다. 1991년부터 2006년까지 15년 동안 코리아나 모델로 활동했다.화장품 광고에 자주 등장하는 전지현 이나영 송혜교 등은 ‘특A급 모델’임은 분명하지만 브랜드를 여러 차례 갈아탔다. 전씨는 에뛰드 라네즈 한율 일리 헤라, 이씨는 라네즈 아이오페 랑콤 숨, 송씨는 에뛰드 이니스프리 라네즈 등 다양한 브랜드의 모델로 활동했다.김태희 씨는 2004년 LG생활건강 오휘 모델로 활동하다가 2006년 아모레퍼시픽 헤라로 바꾸고, 2011년 다시 오휘로 복귀한 독특한 사례다. 이 과정에서 아모레퍼시픽과 LG생활건강이 거액의 모델료를 제시하며 치열한 ‘김태희 쟁탈전’을 벌이기도 했다.화장품업계 관계자는 “화장품 브랜드가 많아지면서 모델 계약을 할 연예인이 ‘동이 났다’는 얘기가 나온 지 오래”라며 “1년 안팎의 단발계약이 대부분이라 한 브랜드에서 장수모델로 활동하는 것은 대단히 어려운 일”이라고 말했다.', mimetype='text/plain', start_char_idx=0, end_char_idx=895, metadata_seperator='\\n', text_template='{metadata_str}\\n\\n{content}'), score=0.2959123951907551)], metadata={'7be7dcb4-5e0e-4d91-9c65-c42c59fb0327': {}})"},"metadata":{}}],"execution_count":69}]}